library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity sekuntikello is
    port (
        clk         : in std_logic;  -- 50 MHz kellosignaali DE10-Lite FPGA:ssa
        reset_n     : in std_logic;  -- Nollausnappi (alustaa laskurin)
        leds        : out std_logic_vector(6 downto 0)  -- 7 LEDiä
    );
end entity sekuntikello;

architecture rtl of sekuntikello is

    signal count       : std_logic_vector(6 downto 0);  -- 7-bit laskuri (maksimi arvo 127 sekuntia)
    signal clk_divider : integer := 0;                  -- Kellosignaalin jakaja
    constant clk_freq  : integer := 50000000;           -- DE10-Lite:n kellotaajuus (50 MHz)
    constant sec_count : integer := clk_freq - 1;       -- Lasketaan 1 sekunnin jakaja

begin
    process (clk, reset_n)
    begin
        if reset_n = '0' then
            clk_divider <= 0;
            count <= (others => '0');  -- Nollataan laskuri
        elsif rising_edge(clk) then
            if clk_divider = sec_count then  -- 1 sekunti kulunut
                clk_divider <= 0;
                if count = "1111111" then  -- Jos laskuri saavuttaa 127 (7 bittiä), nollaa laskuri
                    count <= (others => '0');
                else
                    count <= count + 1;
                end if;
            else
                clk_divider <= clk_divider + 1;
            end if;
        end if;
    end process;

    leds <= count;  -- Näytetään laskuri binäärisenä 7 ledeillä

end architecture rtl;